
#Область ПрограммныйИнтерфейс
Функция ПроцессорРаспознования(Знач Шаблон) Экспорт
	Стек = НовыйСтек();
	Орграф = НовыйОрграф(СтрДлина(Шаблон) + 1);
	М = СтрДлина(Шаблон);
	
	МетаСимволы = Новый Соответствие;
	Для Каждого МетаСимвол Из СтрРазделить("(,*,)", ",") Цикл
		МетаСимволы.Вставить(МетаСимвол, Истина);
	КонецЦикла;
	
	Для я = 0 По М-1 Цикл
		Позиция = я + 1;
		ПозицияЛевойСкобки = я;
		Символ = Сред(Шаблон, Позиция, 1);
        Если Символ = "(" ИЛИ Символ = "|" Тогда
            ДобавитьВСтек(Стек, я);
		ИначеЕсли Символ = ")" Тогда
			ИндексыОператоровИЛИ = Новый Массив;
			НачальныйСимвол = "";
			Пока НачальныйСимвол <> "(" Цикл
				Если СтекПустой(Стек) Тогда
					ВызватьИсключение "Ошибка разбора шаблона";
				КонецЕсли;
				
	            ПозицияОператора = ИзъятьИзСтека(Стек);
				НачальныйСимвол = Сред(Шаблон, ПозицияОператора+1, 1);
				Если НачальныйСимвол = "|" Тогда
					ИндексыОператоровИЛИ.Добавить(ПозицияОператора);
	            ИначеЕсли НачальныйСимвол = "(" Тогда
	                ПозицияЛевойСкобки = ПозицияОператора;
					Для Каждого Индекс Из ИндексыОператоровИЛИ Цикл
						ДобавитьНаправлениеВОрграф(Орграф, ПозицияЛевойСкобки, Индекс+1);
						ДобавитьНаправлениеВОрграф(Орграф, Индекс, я);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
        КонецЕсли;
		Если я < М-1 Тогда
			СледующийСимвол = Сред(Шаблон, Позиция+1, 1);
			Если СледующийСимвол = "*" Тогда
				ДобавитьНаправлениеВОрграф(Орграф, ПозицияЛевойСкобки, я+1);
				ДобавитьНаправлениеВОрграф(Орграф, я+1, ПозицияЛевойСкобки);
			КонецЕсли;
        КонецЕсли;
        Если МетаСимволы.Получить(Символ) <> Неопределено Тогда
            ДобавитьНаправлениеВОрграф(Орграф, я, я+1);
		КонецЕсли;
    КонецЦикла;
	
	Возврат Новый Структура("Шаблон, Орграф", Шаблон, Орграф);
КонецФункции

Функция Распознано(Знач Процессор, Знач Текст) Экспорт
	Вершины = НовыйМешок();
	ОбъектПВГ = НовыйНаправленныйПоискВГлубину(Процессор.Орграф, 0);
	М = СтрДлина(Процессор.Шаблон);
	
	Для Вершина = 0 По КоличествоВершинОрграфа(Процессор.Орграф) - 1 Цикл
		Если НайденоПоискомВГлубину(ОбъектПВГ, Вершина) Тогда
			ДобавитьВМешок(Вершины, Вершина);
		КонецЕсли;
	КонецЦикла;

	Для я = 0 По СтрДлина(Текст) - 1 Цикл
		Совпадения = НовыйМешок();
		Для Каждого Вершина Из ЭлементыМешка(Вершины) Цикл
			Если Вершина < М Тогда
				Символ = Сред(Процессор.Шаблон, Вершина+1, 1);
				Если Символ = "." ИЛИ Символ = Сред(Текст, я+1, 1) Тогда
					ДобавитьВМешок(Совпадения, Вершина+1);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Вершины = НовыйМешок();
		ОбъектПВГ = НовыйНаправленныйПоискВГлубинуПоВершинам(Процессор.Орграф, Совпадения);
		Для Вершина = 0 По КоличествоВершинОрграфа(Процессор.Орграф) - 1 Цикл
			Если НайденоПоискомВГлубину(ОбъектПВГ, Вершина) Тогда
				ДобавитьВМешок(Вершины, Вершина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Вершина Из ЭлементыМешка(Вершины) Цикл
		Если Вершина = М Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Область КОНСТРУКТОРЫ
Функция НовыйСтек()
	Возврат Новый Массив;
КонецФункции

Функция НовыйМешок()
	Возврат Новый Структура("Первая, Хранилище", Неопределено, Новый Соответствие);
КонецФункции

Функция НоваяНода(Знач Значение)
	Возврат Новый Структура("Ссылка, Следующая, Значение", 0, Неопределено, Значение);
КонецФункции

Функция НовыйОрграф(Знач Мощность)
	фРезультат = Новый Массив;
	Для я = 1 По Мощность Цикл
		фРезультат.Добавить(НовыйМешок());
	КонецЦикла;
	
	Возврат фРезультат;
КонецФункции

Функция НовыйНаправленныйПоискВГлубину(Знач Орграф, Знач НомерВершины)
	фРезультат = Новый Массив;
	Для _ = 1 По КоличествоВершинОрграфа(Орграф) Цикл
		фРезультат.Добавить(Ложь);
	КонецЦикла;
	
	ПоискВГлубину(фРезультат, Орграф, НомерВершины);
	
	Возврат фРезультат;
КонецФункции

Функция НовыйНаправленныйПоискВГлубинуПоВершинам(Знач Орграф, Знач Источники)
	фРезультат = Новый Массив;
	Для _ = 1 По КоличествоВершинОрграфа(Орграф) Цикл
		фРезультат.Добавить(Ложь);
	КонецЦикла;
	
	Для Каждого Источник Из ЭлементыМешка(Источники) Цикл
		Если НЕ фРезультат.Получить(Источник) Тогда
			ПоискВГлубину(фРезультат, Орграф, Источник);
		КонецЕсли;
	КонецЦикла;
	
	Возврат фРезультат;
КонецФункции

#Область Стек
Процедура ДобавитьВСтек(Стек, Знач Значение)
	Стек.Добавить(Значение);
КонецПроцедуры

Функция ИзъятьИзСтека(Стек)
	Перем фРезультат;
	Если СтекПустой(Стек) Тогда
		Возврат фРезультат;
	КонецЕсли;
	фРезультат = Стек.Получить(Стек.ВГраница());
	Стек.Удалить(Стек.ВГраница());
	Возврат фРезультат;
КонецФункции

Функция ВзятьИзСтека(Стек)
	Перем фРезультат;
	Если СтекПустой(Стек) Тогда
		Возврат фРезультат;
	КонецЕсли;
	
	Возврат Стек.Получить(Стек.ВГраница());
КонецФункции

Функция СтекПустой(Знач Стек)
	Возврат Стек.Количество() = 0;
КонецФункции
#КонецОбласти

#Область Мешок
Процедура ДобавитьВМешок(Мешок, Знач Значение)
	НоваяПервая = НоваяНода(Значение);
	ТекущаяПервая = Мешок.Первая;
	Если ТекущаяПервая <> Неопределено Тогда
		ТекущаяПервая = ТекущаяПервая.Ссылка;
		НоваяПервая.Ссылка = ТекущаяПервая + 1;
	КонецЕсли;
	НоваяПервая.Следующая = ТекущаяПервая;
	Мешок.Первая = НоваяПервая;
	Мешок.Хранилище.Вставить(НоваяПервая.Ссылка, НоваяПервая);
КонецПроцедуры

Функция РазмерМешка(Знач Мешок)
	Возврат Мешок.Хранилище.Количество();
КонецФункции

Функция МешокПуст(Знач Мешок)
	Возврат Мешок.Хранилище.Количество() = 0;
КонецФункции

Функция ЭлементыМешка(Знач Мешок)
	фРезультат = Новый Массив;
	
	Текущая = Мешок.Первая;
	Пока Текущая <> Неопределено Цикл
		фРезультат.Добавить(Текущая.Значение);
		Текущая = Мешок.Хранилище.Получить(Текущая.Следующая);
	КонецЦикла;
	
	Возврат фРезультат;
КонецФункции
#КонецОбласти

#Область ОриентированныйГраф
Функция КоличествоВершинОрграфа(Знач Орграф)
	Возврат Орграф.Количество();
КонецФункции

Функция КоличествоНаправленийОрграфа(Знач Орграф)
	фРезультат = 0;
	
	Для Каждого Направления Из Орграф Цикл
		фРезультат = фРезультат + РазмерМешка(Направления);
	КонецЦикла;
	
	Возврат фРезультат;
КонецФункции

Функция ДобавитьНаправлениеВОрграф(Орграф, Знач НомерВершиныОтправления, Знач НомерВершиныНазначения)
	Направления = Орграф.Получить(НомерВершиныОтправления);
	ДобавитьВМешок(Направления, НомерВершиныНазначения);
КонецФункции

Функция РеверсОрграфа(Знач Орграф)
	фРезультат = НовыйОрграф(КоличествоВершинОрграфа(Орграф));
	Для я = 0 По КоличествоВершинОрграфа(Орграф)-1 Цикл
		Для Каждого Направление Из ЭлементыМешка(Орграф.Получить(я)) Цикл
			ДобавитьНаправлениеВОрграф(фРезультат, я, Направление);
		КонецЦикла;
	КонецЦикла;
КонецФункции
#КонецОбласти

#Область ПоискВГлубину
Процедура ПоискВГлубину(Знач ОбъектПВГ, Знач Орграф, Знач НомерВершины)
	ОбъектПВГ.Установить(НомерВершины, Истина);
	Для Каждого Направление Из ЭлементыМешка(Орграф.Получить(НомерВершины)) Цикл
		Если НЕ ОбъектПВГ.Получить(Направление) Тогда
			ПоискВГлубину(ОбъектПВГ, Орграф, Направление);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НайденоПоискомВГлубину(Знач ОбъектПВГ, Знач НомерВершины)
	Возврат ОбъектПВГ.Получить(НомерВершины);
КонецФункции
#КонецОбласти
#КонецОбласти
